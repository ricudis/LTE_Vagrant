# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu2004"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.30", virtualbox__intnet: "dpdknet", name: "dpdknet"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "virtualbox" do |vb|
	vb.memory = 4096
	vb.cpus = 8
	vb.default_nic_type = "virtio"
	vb.customize ["modifyvm", :id, "--nicpromisc1", "allow-all", "--nicpromisc2", "allow-all"]
  end

  config.vm.provision "file", source: "provision_files/", destination: "/tmp/"

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
	sudo snap install cmake --classic
	sudo apt update -y
	sudo apt install -y virtualbox-guest-dkms virtualbox-guest-utils
	sudo apt install -y autoconf autoconf-archive libtool gettext automake net-tools bridge-utils gcc make g++ libsctp-dev build-essential flex bison git python3-pip python3-setuptools python3-wheel libpcsclite-dev libtalloc-dev libortp-dev libsctp-dev libmnl-dev libdbi-dev libdbd-sqlite3 libsqlite3-dev sqlite3 libc-ares-dev libgnutls28-dev libsofia-sip-ua-glib-dev libusb-dev libusb-1.0-0-dev
	git clone git://git.osmocom.org/libosmocore
	git clone git://git.osmocom.org/libosmo-abis
	git clone git://git.osmocom.org/libosmo-netif
	git clone git://git.osmocom.org/libosmo-sccp
	git clone git://git.osmocom.org/osmo-mgw
	git clone git://git.osmocom.org/libsmpp34
	git clone git://git.osmocom.org/osmo-iuh
	git clone git://git.osmocom.org/libasn1c
	git clone git://git.osmocom.org/osmo-msc
	git clone git://git.osmocom.org/osmo-sgsn
	git clone git://git.osmocom.org/osmo-ggsn
	git clone git://git.osmocom.org/osmo-sip-connector
	git clone git://git.osmocom.org/osmo-hlr
	#
	cd libosmocore/
	autoreconf -fi
	./configure --prefix=/opt/osmo/
	make
	sudo make install
	cd ..
	#
	#
	cd libosmo-abis/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/ --disable-dahdi
	make
	sudo make install
	cd ..
	#
	#
	cd libosmo-netif/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
       	cd ..
	#
	#
	cd libosmo-sccp/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	cd ..
	#
	#
	cd libsmpp34/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-mgw/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	cd ..
	#
	#
	cd libasn1c/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-iuh/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-hlr
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/ --enable-smpp --enable-iu
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-msc
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/ --enable-smpp --enable-iu
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-ggsn/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-sgsn/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/ --enable-iu
	make
	sudo make install
	cd ..
	#
	#
	cd osmo-sip-connector/
	autoreconf -fi
	./configure --prefix=/opt/osmo/ PKG_CONFIG_PATH=/opt/osmo/lib/pkgconfig/
	make
	sudo make install
	#
	reboot
  SHELL
end